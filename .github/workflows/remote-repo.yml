name: Release-Test-Remote-Repo

on:
  workflow_dispatch:
    inputs:
      target-url:
        description: ""
        required: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - GOARCH: "amd64"
            GOOS: "linux"
          - GOARCH: "386"
            GOOS: "linux"
          - GOARCH: "arm64"
            GOOS: "linux"
          - GOARCH: "amd64"
            GOOS: "darwin"
          - GOARCH: "amd64"
            GOOS: "windows"
    env:
      GOOS: ${{ matrix.GOOS }}
      GOARCH: ${{ matrix.GOARCH }}
    steps:
      # - uses: actions/checkout@master
      - name: Get src-dir path
        id: get-src-dir-path
        env:
          TARGET_URL: ${{ github.event.inputs.target-url }}
        run: |
          _FILE_NAME="$(basename "${TARGET_URL}")"
          wget -q -O "$_FILE_NAME" "$TARGET_URL"
          tar -xzf "$_FILE_NAME"
          _SRC_DIR="$(tar -tzf "$_FILE_NAME" | head -1 | cut -f1 -d"/")"
          echo '::set-output name=src-dir::${_SRC_DIR}'
      - name: Cache Go Build and Modules
        id: cache-go-modules
        uses: actions/cache@v2
        with:
          path: |
            .cache-modules
            .cache-go-build
          key: ${{ runner.os }}-golang-${{ matrix.GOOS }}-${{ matrix.GOARCH }}-${{ hashFiles('**/go.sum') }}-v2
          restore-keys: |
            ${{ runner.os }}-golang-${{ matrix.GOOS }}-${{ matrix.GOARCH }}-
      - name: Get Dependencies
        if: steps.cache-go-modules.outputs.cache-hit != 'true'
        uses: unfor19/release-action/golang/1.17beta1@master
        with:
          action: dependencies
          src-dir: ${{ steps.get-src-dir-path.outputs.src-dir }}"
          project-name: app
      - name: Go Build
        uses: unfor19/release-action/golang/1.17beta1@master
        with:
          action: build
          src-dir: ${{ steps.get-src-dir-path.outputs.src-dir }}"
          project-name: app
      - name: Go Test
        uses: unfor19/release-action/golang/1.17beta1@master
        with:
          action: test
          src-dir: ${{ steps.get-src-dir-path.outputs.src-dir }}"
          project-name: app
      - name: Release
        uses: unfor19/release-action/golang/1.17beta1@master
        with:
          action: release
          src-dir: ${{ steps.get-src-dir-path.outputs.src-dir }}"
          project-name: app
          gh-token: ${{ secrets.GH_TOKEN }}
