name: Build Binaries

on:
  push:
    branches: [master] # creates a pre-release
  release:
    types: [released] # does not include pre-release

jobs:
  build-linux-binaries:
    name: linux
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - GOARCH: "amd64"
          - GOARCH: "386"
          - GOARCH: "arm64"
    env:
      GOOS: linux
    steps:
      - uses: actions/checkout@master
      - name: Cache Go Build and Modules
        id: cache-go-modules
        uses: actions/cache@v2
        with:
          path: |
            .cache-modules
            .cache-go-build
          key: ${{ runner.os }}-golang-${{ matrix.GOARCH }}-${{ hashFiles('golang/go.sum') }}-v1
          restore-keys: |
            ${{ runner.os }}-golang-${{ matrix.GOARCH }}-
      - name: Get Dependencies
        if: steps.cache-go-modules.outputs.cache-hit != 'true'
        uses: unfor19/release-action/golang/1.16@master
        env:
          GOARCH: ${{ matrix.GOARCH }}
        with:
          lang-name: golang
          lang-version: 1.16
          action: dependencies
          src-dir: golang
      - name: Go Build
        uses: unfor19/release-action/golang/1.16@master
        env:
          GOARCH: ${{ matrix.GOARCH }}
        with:
          lang-name: golang
          lang-version: 1.16
          action: build
          src-dir: golang
          project-name: app
      - name: Go Test
        uses: unfor19/release-action/golang/1.16@master
        with:
          lang-name: golang
          lang-version: 1.16
          action: test
          src-dir: golang
      - name: Release
        uses: unfor19/release-action/golang/1.16@master
        env:
          GOARCH: ${{ matrix.GOARCH }}
        with:
          lang-name: golang
          lang-version: 1.16
          action: release
          src-dir: golang
          project-name: app
          gh-token: ${{ secrets.GH_TOKEN }}
